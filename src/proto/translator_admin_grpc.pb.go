// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: proto/translator_admin.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// TranslatorAdminClient is the client API for TranslatorAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TranslatorAdminClient interface {
	FindTranslationsByFirstLetter(ctx context.Context, in *TranslationFindParameter, opts ...grpc.CallOption) (*TranslationFindResposne, error)
	FindTranslationByTextAndPos(ctx context.Context, in *TranslationFindByTextAndPosParameter, opts ...grpc.CallOption) (*TranslationResponse, error)
	FindTranslationsByText(ctx context.Context, in *TranslationFindByTextParameter, opts ...grpc.CallOption) (*TranslationFindResposne, error)
	AddTranslation(ctx context.Context, in *TranslationAddParameter, opts ...grpc.CallOption) (*TranslationAddResponse, error)
	UpdateTranslation(ctx context.Context, in *TranslationUpdateParameter, opts ...grpc.CallOption) (*TranslationAddResponse, error)
	RemoveTranslation(ctx context.Context, in *TranslationRemoveParameter, opts ...grpc.CallOption) (*TranslationRemoveResponse, error)
}

type translatorAdminClient struct {
	cc grpc.ClientConnInterface
}

func NewTranslatorAdminClient(cc grpc.ClientConnInterface) TranslatorAdminClient {
	return &translatorAdminClient{cc}
}

func (c *translatorAdminClient) FindTranslationsByFirstLetter(ctx context.Context, in *TranslationFindParameter, opts ...grpc.CallOption) (*TranslationFindResposne, error) {
	out := new(TranslationFindResposne)
	err := c.cc.Invoke(ctx, "/proto.TranslatorAdmin/FindTranslationsByFirstLetter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *translatorAdminClient) FindTranslationByTextAndPos(ctx context.Context, in *TranslationFindByTextAndPosParameter, opts ...grpc.CallOption) (*TranslationResponse, error) {
	out := new(TranslationResponse)
	err := c.cc.Invoke(ctx, "/proto.TranslatorAdmin/FindTranslationByTextAndPos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *translatorAdminClient) FindTranslationsByText(ctx context.Context, in *TranslationFindByTextParameter, opts ...grpc.CallOption) (*TranslationFindResposne, error) {
	out := new(TranslationFindResposne)
	err := c.cc.Invoke(ctx, "/proto.TranslatorAdmin/FindTranslationsByText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *translatorAdminClient) AddTranslation(ctx context.Context, in *TranslationAddParameter, opts ...grpc.CallOption) (*TranslationAddResponse, error) {
	out := new(TranslationAddResponse)
	err := c.cc.Invoke(ctx, "/proto.TranslatorAdmin/AddTranslation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *translatorAdminClient) UpdateTranslation(ctx context.Context, in *TranslationUpdateParameter, opts ...grpc.CallOption) (*TranslationAddResponse, error) {
	out := new(TranslationAddResponse)
	err := c.cc.Invoke(ctx, "/proto.TranslatorAdmin/UpdateTranslation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *translatorAdminClient) RemoveTranslation(ctx context.Context, in *TranslationRemoveParameter, opts ...grpc.CallOption) (*TranslationRemoveResponse, error) {
	out := new(TranslationRemoveResponse)
	err := c.cc.Invoke(ctx, "/proto.TranslatorAdmin/RemoveTranslation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TranslatorAdminServer is the server API for TranslatorAdmin service.
// All implementations must embed UnimplementedTranslatorAdminServer
// for forward compatibility
type TranslatorAdminServer interface {
	FindTranslationsByFirstLetter(context.Context, *TranslationFindParameter) (*TranslationFindResposne, error)
	FindTranslationByTextAndPos(context.Context, *TranslationFindByTextAndPosParameter) (*TranslationResponse, error)
	FindTranslationsByText(context.Context, *TranslationFindByTextParameter) (*TranslationFindResposne, error)
	AddTranslation(context.Context, *TranslationAddParameter) (*TranslationAddResponse, error)
	UpdateTranslation(context.Context, *TranslationUpdateParameter) (*TranslationAddResponse, error)
	RemoveTranslation(context.Context, *TranslationRemoveParameter) (*TranslationRemoveResponse, error)
	mustEmbedUnimplementedTranslatorAdminServer()
}

// UnimplementedTranslatorAdminServer must be embedded to have forward compatible implementations.
type UnimplementedTranslatorAdminServer struct {
}

func (UnimplementedTranslatorAdminServer) FindTranslationsByFirstLetter(context.Context, *TranslationFindParameter) (*TranslationFindResposne, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindTranslationsByFirstLetter not implemented")
}
func (UnimplementedTranslatorAdminServer) FindTranslationByTextAndPos(context.Context, *TranslationFindByTextAndPosParameter) (*TranslationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindTranslationByTextAndPos not implemented")
}
func (UnimplementedTranslatorAdminServer) FindTranslationsByText(context.Context, *TranslationFindByTextParameter) (*TranslationFindResposne, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindTranslationsByText not implemented")
}
func (UnimplementedTranslatorAdminServer) AddTranslation(context.Context, *TranslationAddParameter) (*TranslationAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTranslation not implemented")
}
func (UnimplementedTranslatorAdminServer) UpdateTranslation(context.Context, *TranslationUpdateParameter) (*TranslationAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTranslation not implemented")
}
func (UnimplementedTranslatorAdminServer) RemoveTranslation(context.Context, *TranslationRemoveParameter) (*TranslationRemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveTranslation not implemented")
}
func (UnimplementedTranslatorAdminServer) mustEmbedUnimplementedTranslatorAdminServer() {}

// UnsafeTranslatorAdminServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TranslatorAdminServer will
// result in compilation errors.
type UnsafeTranslatorAdminServer interface {
	mustEmbedUnimplementedTranslatorAdminServer()
}

func RegisterTranslatorAdminServer(s grpc.ServiceRegistrar, srv TranslatorAdminServer) {
	s.RegisterService(&TranslatorAdmin_ServiceDesc, srv)
}

func _TranslatorAdmin_FindTranslationsByFirstLetter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TranslationFindParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslatorAdminServer).FindTranslationsByFirstLetter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TranslatorAdmin/FindTranslationsByFirstLetter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslatorAdminServer).FindTranslationsByFirstLetter(ctx, req.(*TranslationFindParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TranslatorAdmin_FindTranslationByTextAndPos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TranslationFindByTextAndPosParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslatorAdminServer).FindTranslationByTextAndPos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TranslatorAdmin/FindTranslationByTextAndPos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslatorAdminServer).FindTranslationByTextAndPos(ctx, req.(*TranslationFindByTextAndPosParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TranslatorAdmin_FindTranslationsByText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TranslationFindByTextParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslatorAdminServer).FindTranslationsByText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TranslatorAdmin/FindTranslationsByText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslatorAdminServer).FindTranslationsByText(ctx, req.(*TranslationFindByTextParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TranslatorAdmin_AddTranslation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TranslationAddParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslatorAdminServer).AddTranslation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TranslatorAdmin/AddTranslation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslatorAdminServer).AddTranslation(ctx, req.(*TranslationAddParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TranslatorAdmin_UpdateTranslation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TranslationUpdateParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslatorAdminServer).UpdateTranslation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TranslatorAdmin/UpdateTranslation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslatorAdminServer).UpdateTranslation(ctx, req.(*TranslationUpdateParameter))
	}
	return interceptor(ctx, in, info, handler)
}

func _TranslatorAdmin_RemoveTranslation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TranslationRemoveParameter)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TranslatorAdminServer).RemoveTranslation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TranslatorAdmin/RemoveTranslation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TranslatorAdminServer).RemoveTranslation(ctx, req.(*TranslationRemoveParameter))
	}
	return interceptor(ctx, in, info, handler)
}

// TranslatorAdmin_ServiceDesc is the grpc.ServiceDesc for TranslatorAdmin service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TranslatorAdmin_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TranslatorAdmin",
	HandlerType: (*TranslatorAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindTranslationsByFirstLetter",
			Handler:    _TranslatorAdmin_FindTranslationsByFirstLetter_Handler,
		},
		{
			MethodName: "FindTranslationByTextAndPos",
			Handler:    _TranslatorAdmin_FindTranslationByTextAndPos_Handler,
		},
		{
			MethodName: "FindTranslationsByText",
			Handler:    _TranslatorAdmin_FindTranslationsByText_Handler,
		},
		{
			MethodName: "AddTranslation",
			Handler:    _TranslatorAdmin_AddTranslation_Handler,
		},
		{
			MethodName: "UpdateTranslation",
			Handler:    _TranslatorAdmin_UpdateTranslation_Handler,
		},
		{
			MethodName: "RemoveTranslation",
			Handler:    _TranslatorAdmin_RemoveTranslation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/translator_admin.proto",
}
